//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class EldritchCardContext {

    public EldritchCardEntity isActiveMythosEntity { get { return GetGroup(EldritchCardMatcher.IsActiveMythos).GetSingleEntity(); } }

    public bool isIsActiveMythos {
        get { return isActiveMythosEntity != null; }
        set {
            var entity = isActiveMythosEntity;
            if (value != (entity != null)) {
                if (value) {
                    CreateEntity().isIsActiveMythos = true;
                } else {
                    entity.Destroy();
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class EldritchCardEntity {

    static readonly EldritchHorror.Entitas.Components.IsActiveMythosComponent isActiveMythosComponent = new EldritchHorror.Entitas.Components.IsActiveMythosComponent();

    public bool isIsActiveMythos {
        get { return HasComponent(EldritchCardComponentsLookup.IsActiveMythos); }
        set {
            if (value != isIsActiveMythos) {
                var index = EldritchCardComponentsLookup.IsActiveMythos;
                if (value) {
                    var componentPool = GetComponentPool(index);
                    var component = componentPool.Count > 0
                            ? componentPool.Pop()
                            : isActiveMythosComponent;

                    AddComponent(index, component);
                } else {
                    RemoveComponent(index);
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class EldritchCardMatcher {

    static Entitas.IMatcher<EldritchCardEntity> _matcherIsActiveMythos;

    public static Entitas.IMatcher<EldritchCardEntity> IsActiveMythos {
        get {
            if (_matcherIsActiveMythos == null) {
                var matcher = (Entitas.Matcher<EldritchCardEntity>)Entitas.Matcher<EldritchCardEntity>.AllOf(EldritchCardComponentsLookup.IsActiveMythos);
                matcher.componentNames = EldritchCardComponentsLookup.componentNames;
                _matcherIsActiveMythos = matcher;
            }

            return _matcherIsActiveMythos;
        }
    }
}
